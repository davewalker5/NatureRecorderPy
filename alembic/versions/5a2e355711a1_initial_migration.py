"""Baselined Alembic with existing database

Revision ID: 5a2e355711a1
Revises: 
Create Date: 2023-08-04 11:29:00.441574

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5a2e355711a1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.CheckConstraint('LENGTH(TRIM(name)) > 0'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', name='CATEGORY_NAME_UX')
    )
    op.create_table('JobStatuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('parameters', sa.String(), nullable=True),
    sa.Column('start', sa.String(), nullable=False),
    sa.Column('end', sa.String(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.CheckConstraint('LENGTH(TRIM(name)) > 0'),
    sa.CheckConstraint('LENGTH(TRIM(start)) > 0'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('county', sa.String(), nullable=False),
    sa.Column('postcode', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.CheckConstraint('LENGTH(TRIM(country)) > 0'),
    sa.CheckConstraint('LENGTH(TRIM(county)) > 0'),
    sa.CheckConstraint('LENGTH(TRIM(name)) > 0'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', name='LOCATION_NAME_UX')
    )
    op.create_table('StatusSchemes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.CheckConstraint('LENGTH(TRIM(name)) > 0'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', name='STATUS_SCHEME_NAME_UX')
    )
    op.create_table('Users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('salt', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.CheckConstraint('LENGTH(TRIM(password)) > 0'),
    sa.CheckConstraint('LENGTH(TRIM(salt)) > 0'),
    sa.CheckConstraint('LENGTH(TRIM(username)) > 0'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    sa.UniqueConstraint('username', name='USER_NAME_UX')
    )
    op.create_table('Species',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('categoryId', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.CheckConstraint('LENGTH(TRIM(name)) > 0'),
    sa.ForeignKeyConstraint(['categoryId'], ['Categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', name='SPECIES_NAME_UX')
    )
    op.create_table('StatusRatings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('statusSchemeId', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.CheckConstraint('LENGTH(TRIM(name)) > 0'),
    sa.ForeignKeyConstraint(['statusSchemeId'], ['StatusSchemes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('statusSchemeId', 'name', name='RATING_SCHEME_NAME_UX')
    )
    op.create_table('Sightings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('locationId', sa.Integer(), nullable=False),
    sa.Column('speciesId', sa.Integer(), nullable=False),
    sa.Column('date', sa.String(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('withYoung', sa.Integer(), nullable=False),
    sa.Column('gender', sa.Integer(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.CheckConstraint('"withYoung" IN (0, 1)'),
    sa.CheckConstraint('gender IN (0, 1, 2, 3)'),
    sa.CheckConstraint('ifnull(number, 1) > 0'),
    sa.ForeignKeyConstraint(['locationId'], ['Locations.id'], ),
    sa.ForeignKeyConstraint(['speciesId'], ['Species.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('locationId', 'speciesId', 'date', name='SIGHTING_LOCATION_SPECIES_DATE_UX')
    )
    op.create_table('SpeciesStatusRatings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('speciesId', sa.Integer(), nullable=False),
    sa.Column('statusRatingId', sa.Integer(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.Column('start', sa.String(), nullable=False),
    sa.Column('end', sa.String(), nullable=True),
    sa.CheckConstraint('(end IS NULL) or (end >= start)'),
    sa.CheckConstraint('LENGTH(TRIM(region)) > 0'),
    sa.ForeignKeyConstraint(['speciesId'], ['Species.id'], ),
    sa.ForeignKeyConstraint(['statusRatingId'], ['StatusRatings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('SpeciesStatusRatings')
    op.drop_table('Sightings')
    op.drop_table('StatusRatings')
    op.drop_table('Species')
    op.drop_table('Users')
    op.drop_table('StatusSchemes')
    op.drop_table('Locations')
    op.drop_table('JobStatuses')
    op.drop_table('Categories')
    # ### end Alembic commands ###
